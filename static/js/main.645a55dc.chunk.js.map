{"version":3,"sources":["shared/baseUrl.js","redux/actionCreators.js","components/HomeComponent.js","redux/rowsReducer.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["baseUrl","fetchRows","dispatch","rowsLoading","fetch","then","response","ok","error","Error","status","statusText","message","json","rows","addRows","catch","rowsFailed","type","errmess","payload","Home","props","state","nameInput","descInput","currRow","currName","currDesc","isModalOpen","toggleModal","bind","handleModal","handleUpdateSubmit","handleNameChange","handleDescChange","handleModalName","handleModalDesc","handleSubmit","handleDelete","this","event","setState","target","id","name","title","values","putRow","description","value","postRow","rowId","deleteRow","Rowlist","Array","from","map","row","index","ButtonGroup","Button","color","onClick","_id","className","Form","onSubmit","Table","dark","hover","responsive","Modal","isOpen","toggle","ModalHeader","ModalBody","Label","htmlFor","Row","Col","md","text","onChange","model","textarea","Input","placeholder","Component","connect","newRow","method","body","JSON","stringify","headers","credentials","console","log","alert","isLoading","errMess","action","store","createStore","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAaA,EAAU,mCCEVC,EAAY,kBAAM,SAACC,GAI5B,OAFAA,EAASC,GAAY,IAEdC,MAAMJ,EAAU,QACtBK,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GAEM,MADc,IAAIC,MAAMD,EAAMI,YAGrCP,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAS,GAAI,OAAIZ,EAASa,EAAQD,OAC9BE,OAAM,SAAAR,GAAK,OAAIN,EAASe,EAAWT,EAAMI,eAGjCT,EAAc,iBAAO,CAC9Be,KAAM,iBAGGD,EAAa,SAACE,GAAD,MAAc,CACpCD,KAAM,cACNE,QAASD,IAGAJ,EAAU,SAACD,GAAD,MAAW,CAC9BI,KAAM,WACNE,QAASN,I,2GChBPO,E,kDAEF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAW,GACXC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,aAAa,GAGjB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,mBAAqB,EAAKA,mBAAmBF,KAAxB,gBAC1B,EAAKG,iBAAmB,EAAKA,iBAAiBH,KAAtB,gBACxB,EAAKI,iBAAmB,EAAKA,iBAAiBJ,KAAtB,gBACxB,EAAKK,gBAAkB,EAAKA,gBAAgBL,KAArB,gBACvB,EAAKM,gBAAkB,EAAKA,gBAAgBN,KAArB,gBACvB,EAAKO,aAAe,EAAKA,aAAaP,KAAlB,gBACpB,EAAKQ,aAAe,EAAKA,aAAaR,KAAlB,gBAnBN,E,gEAwBdS,KAAKlB,MAAMrB,c,kCAGHwC,GACRD,KAAKE,SAAS,CACVhB,QAASe,EAAME,OAAOC,GACtBjB,SAAUc,EAAME,OAAOE,KACvBjB,SAAUa,EAAME,OAAOG,MACvBjB,aAAcW,KAAKjB,MAAMM,gB,kCAIrBY,GACRD,KAAKE,SAAS,CACVb,aAAcW,KAAKjB,MAAMM,gB,yCAIdkB,GACjBP,KAAKV,cACLU,KAAKlB,MAAM0B,OAAOR,KAAKjB,MAAMG,QAASqB,EAAOF,KAAME,EAAOE,e,uCAG3CR,GACbD,KAAKE,SAAS,CAAClB,UAAWiB,EAAME,OAAOO,U,uCAG1BT,GACbD,KAAKE,SAAS,CAACjB,UAAWgB,EAAME,OAAOO,U,sCAG3BT,GACZD,KAAKE,SAAS,CAACf,SAAUc,EAAME,OAAOO,U,sCAG1BT,GACZD,KAAKE,SAAS,CAACd,SAAUa,EAAME,OAAOO,U,mCAI7BH,GACTP,KAAKlB,MAAM6B,QAAQX,KAAKjB,MAAMC,UAAYgB,KAAKjB,MAAME,a,mCAG5C2B,GACTZ,KAAKlB,MAAM+B,UAAUD,K,+BAIhB,IAAD,OAKEE,EADOC,MAAMC,KAAKhB,KAAKlB,MAAMR,MACd2C,KAAI,SAACC,EAAKC,GAE3B,OAEI,+BACI,6BAAKD,EAAIb,OACT,6BAAKa,EAAIT,cACT,6BACI,eAACW,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAQhB,KAAK,SAASiB,MAAM,SAASC,QAAS,WAAO,EAAKxB,aAAamB,EAAIM,MAA3E,oBAEA,cAACH,EAAA,EAAD,CAAQjB,GAAIc,EAAIM,IAAKnB,KAAMa,EAAIb,KAAMC,MAAOY,EAAIT,YAAac,QAAS,EAAK/B,YAA3E,+BAPH0B,EAAIM,QAerB,OAEI,qBAAKC,UAAU,YAAf,SACI,8BAEI,cAACC,EAAA,EAAD,CAAMC,SAAY,SAACpB,GAAD,OAAY,EAAKzB,MAAMgB,aAAaS,IAAtD,SACA,eAACqB,EAAA,EAAD,CAAOC,MAAI,EAACC,OAAK,EAACC,YAAU,EAA5B,UACI,gCACI,+BACI,sCACA,6CACA,4BAGR,kCACA,eAACC,EAAA,EAAD,CAAOC,OAAQjC,KAAKjB,MAAMM,YAAa6C,OAAQlC,KAAKV,YAApD,UACQ,cAAC6C,EAAA,EAAD,CAAaD,OAAQlC,KAAKV,YAA1B,wBACA,cAAC8C,EAAA,EAAD,UACI,eAAC,YAAD,CAAWT,SAAU,SAACpB,GAAD,OAAY,EAAKd,mBAAmBc,IAAzD,UACI,cAAC8B,EAAA,EAAD,CAAOC,QAAQ,OAAf,kBACA,cAACC,EAAA,EAAD,CAAKd,UAAU,aAAf,SACI,cAACe,EAAA,EAAD,CAAKC,GAAI,GAAT,SACI,cAAC,UAAQC,KAAT,CAAcC,SAAU3C,KAAKJ,gBAAiBgD,MAAM,QAAQxC,GAAG,OAAOC,KAAK,OAAOK,MAAOV,KAAKjB,MAAMI,SACpGsC,UAAU,qBAGlB,cAACY,EAAA,EAAD,CAAOC,QAAQ,cAAf,yBACA,cAACC,EAAA,EAAD,CAAKd,UAAU,aAAf,SACI,cAACe,EAAA,EAAD,UACI,cAAC,UAAQK,SAAT,CAAkBF,SAAU3C,KAAKH,gBAAiB+C,MAAM,eAAexC,GAAG,cAAcC,KAAK,cAC7F/B,KAAK,IAAKoC,MAAOV,KAAKjB,MAAMK,SAC5BqC,UAAU,qBAIlB,cAACc,EAAA,EAAD,CAAKd,UAAU,aAAf,SACI,cAACe,EAAA,EAAD,UACI,cAACnB,EAAA,EAAD,CAAQ3C,KAAK,SAAS4C,MAAM,UAA5B,gCAQnBR,EACD,+BACI,6BAAI,cAACgC,EAAA,EAAD,CAAO1C,GAAG,OAAM2C,YAAY,aAAarC,MAAOV,KAAKjB,MAAMC,UAAW2D,SAAU3C,KAAKN,qBACzF,6BAAI,cAACoD,EAAA,EAAD,CAAO1C,GAAG,OAAO2C,YAAY,oBAAoBrC,MAAOV,KAAKjB,MAAME,UAAW0D,SAAU3C,KAAKL,qBACjG,6BACA,cAAC0B,EAAA,EAAD,CAAQ3C,KAAK,SAAS6C,QAASvB,KAAKF,aAApC,sC,GArJbkD,aAmKJC,qBAhLS,SAAAlE,GACpB,MAAO,CACLT,KAAMS,EAAMT,SAIS,SAACZ,GAAD,MAAe,CACtCD,UAAW,WAAQC,EAASD,MAC5BkD,QAAS,SAACN,EAAMI,GAAP,OAAuB/C,EDwBb,SAAC2C,EAAMI,GAAP,OAAuB,SAAC/C,GAC7C,IAAMwF,EAAS,CACX7C,KAAMA,EACNI,YAAaA,GAGjB,OAAO7C,MAAMJ,EAAU,OAAQ,CAC3B2F,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhB3F,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAC,GAAQ,OAAIJ,EAASa,EAAQT,OAClCU,OAAM,SAAAR,GAAYyF,QAAQC,IAAI,YAAa1F,EAAMI,SAAUuF,MAAM,wCAAwC3F,EAAMI,aCpDrEuC,CAAQN,EAAMI,KACvDI,UAAW,SAACD,GAAD,OAAWlD,EDsDD,SAACkD,GAAD,OAAW,SAAClD,GAEnC,OAAOE,MAAMJ,EAAU,QAAUoD,EAAO,CACpCuC,OAAQ,SACRC,KAAMC,KAAKC,YACXC,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhB3F,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAC,GAAQ,OAAIJ,EAASD,QAC1Be,OAAM,SAAAR,GAAYyF,QAAQC,IAAI,YAAa1F,EAAMI,SAAUuF,MAAM,yCAAyC3F,EAAMI,aC9EhFyC,CAAUD,KACzCJ,OAAQ,SAACI,EAAOP,EAAMI,GAAd,OAA8B/C,EDgFpB,SAACkD,EAAOP,EAAMI,GAAd,OAA8B,SAAC/C,GACnD,IAAMwF,EAAS,CACX7C,KAAMA,EACNI,YAAaA,GAGjB,OAAO7C,MAAMJ,EAAU,QAASoD,EAAO,CACnCuC,OAAQ,MACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,oBAElBC,YAAa,gBAEhB3F,MAAK,SAAAC,GACF,GAAIA,EAASC,GACX,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,KAGV,SAAAA,GACM,MAAMA,KAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASO,UAC1BR,MAAK,SAAAC,GAAQ,OAAIJ,EAASD,QAC1Be,OAAM,SAAAR,GAAYyF,QAAQC,IAAI,WAAY1F,EAAMI,SAAUuF,MAAM,yCAAyC3F,EAAMI,aC5G/DoC,CAAOI,EAAOP,EAAMI,QAsKxDwC,CAA4CpE,G,yCCvL9CP,EAAO,WAAiE,IAAhES,EAA+D,uDAAvD,CAAE6E,WAAW,EAAMC,QAAS,KAAMvF,KAAK,IAAKwF,EAAW,uCAChF,OAAQA,EAAOpF,MACX,IAAK,WACD,OAAO,2BAAIK,GAAX,IAAkB6E,WAAW,EAAOC,QAAS,KAAMvF,KAAMwF,EAAOlF,UAEpE,IAAK,eACD,OAAO,2BAAIG,GAAX,IAAkB6E,WAAW,EAAMC,QAAS,KAAMvF,KAAM,KAE5D,IAAK,cACD,OAAO,2BAAIS,GAAX,IAAkB6E,WAAW,EAAOC,QAASC,EAAOlF,UAExD,QACI,OAAOG,ICPbgF,ECCYC,sBAAY1F,EAAK2F,0BAAgBC,IAAMC,MDY1CC,MAVf,WACE,OACE,cAAC,WAAD,CAAUL,MAAOA,EAAjB,SACE,qBAAKtC,UAAU,MAAf,SACE,cAAC,EAAD,SEAO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB1G,MAAK,YAAkD,IAA/C2G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.645a55dc.chunk.js","sourcesContent":["export const baseUrl = 'https://crudtable.herokuapp.com/';","import { baseUrl } from '../shared/baseUrl';\n\nexport const fetchRows = () => (dispatch) => {\n\n    dispatch(rowsLoading(true));\n\n    return fetch(baseUrl + 'rows')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(rows => dispatch(addRows(rows)))\n    .catch(error => dispatch(rowsFailed(error.message)));\n}\n\nexport const rowsLoading = () => ({\n    type: \"ROWS_LOADING\"\n});\n\nexport const rowsFailed = (errmess) => ({\n    type: \"ROWS_FAILED\",\n    payload: errmess\n});\n\nexport const addRows = (rows) => ({\n    type: \"ADD_ROWS\",\n    payload: rows\n});\n\nexport const postRow = (name, description) => (dispatch) => {\n  const newRow = {\n      name: name,\n      description: description\n  };\n  \n  return fetch(baseUrl + 'rows', {\n      method: \"POST\",\n      body: JSON.stringify(newRow),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(addRows(response)))\n  .catch(error =>  { console.log('post rows', error.message); alert('Your row could not be posted\\nError: '+error.message); });\n};\n\nexport const deleteRow = (rowId) => (dispatch) => {\n  \n  return fetch(baseUrl + 'rows/' + rowId, {\n      method: \"DELETE\",\n      body: JSON.stringify(),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(fetchRows()))\n  .catch(error =>  { console.log('post rows', error.message); alert('Your row could not be deleted\\nError: '+error.message); });\n};\n\nexport const putRow = (rowId ,name, description) => (dispatch) => {\n  const newRow = {\n      name: name,\n      description: description\n  };\n  \n  return fetch(baseUrl + 'rows/'+ rowId, {\n      method: \"PUT\",\n      body: JSON.stringify(newRow),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n  })\n  .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          throw error;\n    })\n  .then(response => response.json())\n  .then(response => dispatch(fetchRows()))\n  .catch(error =>  { console.log('put rows', error.message); alert('Your row could not be updated\\nError: '+error.message); });\n};","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {fetchRows, postRow, deleteRow, putRow} from '../redux/actionCreators';\nimport { Table, Button, ButtonGroup, Input, Form, Col, Modal, ModalHeader, ModalBody, Label, Row } from 'reactstrap';\nimport { Control, LocalForm } from 'react-redux-form';\n\n\nconst mapStateToProps = state => {\n    return {\n      rows: state.rows\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    fetchRows: () => { dispatch(fetchRows())},\n    postRow: (name, description) => dispatch(postRow(name, description)),\n    deleteRow: (rowId) => dispatch(deleteRow(rowId)),\n    putRow: (rowId, name, description) => dispatch(putRow(rowId, name, description))\n});\n\nclass Home extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            nameInput: '',\n            descInput: '',\n            currRow: {},\n            currName: '',\n            currDesc: '',\n            isModalOpen: false\n        };\n\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleModal = this.handleModal.bind(this);\n        this.handleUpdateSubmit = this.handleUpdateSubmit.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this);\n        this.handleDescChange = this.handleDescChange.bind(this);\n        this.handleModalName = this.handleModalName.bind(this);\n        this.handleModalDesc = this.handleModalDesc.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n     \n    }\n    \n    componentDidMount(){\n        this.props.fetchRows();\n    }\n\n    handleModal(event){\n        this.setState({\n            currRow: event.target.id,\n            currName: event.target.name,\n            currDesc: event.target.title,\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    toggleModal(event){\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleUpdateSubmit(values) {\n      this.toggleModal();\n      this.props.putRow(this.state.currRow, values.name ,values.description);\n    }\n\n    handleNameChange(event) {\n        this.setState({nameInput: event.target.value});\n      }\n\n    handleDescChange(event) {\n        this.setState({descInput: event.target.value});\n      }\n\n    handleModalName(event){\n        this.setState({currName: event.target.value});\n    }\n\n    handleModalDesc(event){\n        this.setState({currDesc: event.target.value});\n    }\n\n\n    handleSubmit(values){\n        this.props.postRow(this.state.nameInput , this.state.descInput);\n      }\n    \n    handleDelete(rowId){\n        this.props.deleteRow(rowId);\n    }\n\n\n    render(){\n\n\n\n        const ROWS = Array.from(this.props.rows);\n        const Rowlist = ROWS.map((row, index) => {\n            \n            return(\n                \n                <tr key={row._id}>\n                    <td>{row.name}</td>\n                    <td>{row.description}</td>\n                    <td>\n                        <ButtonGroup>\n                            <Button name='delete' color=\"danger\" onClick={() => {this.handleDelete(row._id)}}>Delete</Button>\n                            \n                            <Button id={row._id} name={row.name} title={row.description} onClick={this.handleModal} >Update Row</Button>\n\n                        </ButtonGroup>\n                    </td>\n                </tr>\n            );\n        });\n\n        return(\n            \n            <div className='container'>\n                <div>\n                \n                    <Form onSubmit = {(values) => this.props.handleSubmit(values)}>\n                    <Table dark hover responsive>\n                        <thead>\n                            <tr>\n                                <th>Name</th>\n                                <th>Description</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                                <ModalHeader toggle={this.toggleModal}>Update Row</ModalHeader>\n                                <ModalBody>\n                                    <LocalForm onSubmit={(values) => this.handleUpdateSubmit(values)}>\n                                        <Label htmlFor=\"name\">Name</Label>\n                                        <Row className=\"form-group\">\n                                            <Col md={12}>\n                                                <Control.text onChange={this.handleModalName} model=\".name\" id=\"name\" name=\"name\" value={this.state.currName}\n                                                className=\"form-control\" />\n                                            </Col>\n                                        </Row>\n                                        <Label htmlFor=\"description\">description</Label>\n                                        <Row className=\"form-group\">\n                                            <Col>\n                                                <Control.textarea onChange={this.handleModalDesc} model=\".description\" id=\"description\" name=\"description\" \n                                                rows=\"6\"  value={this.state.currDesc}\n                                                className=\"form-control\"/>\n                                                    \n                                            </Col>\n                                        </Row>\n                                        <Row className=\"form-group\">\n                                            <Col>\n                                                <Button type=\"submit\" color=\"primary\">\n                                                    Submit\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </LocalForm>\n                                </ModalBody>\n                                </Modal>\n                            {Rowlist}\n                            <tr>\n                                <td><Input id='name'placeholder=\"Enter Name\" value={this.state.nameInput} onChange={this.handleNameChange}/></td>\n                                <td><Input id='desc' placeholder=\"Enter Description\" value={this.state.descInput} onChange={this.handleDescChange}/></td>\n                                <td>\n                                <Button type='submit' onClick={this.handleSubmit} >Add</Button>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                    </Form>\n                </div>\n                \n            </div>\n        );\n    }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Home);","export const rows = (state = { isLoading: true, errMess: null, rows:[]}, action) => {\n    switch (action.type) {\n        case \"ADD_ROWS\":\n            return {...state, isLoading: false, errMess: null, rows: action.payload};\n\n        case \"ROWS_LOADING\":\n            return {...state, isLoading: true, errMess: null, rows: []}\n\n        case \"ROWS_FAILED\":\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import './App.css';\nimport Home from './components/HomeComponent';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Home />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport {rows} from './rowsReducer';\n\nexport const ConfigureStore = () => {\n    const store = createStore(rows,applyMiddleware(thunk,logger));\n\n    return store;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}